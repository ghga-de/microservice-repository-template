# Only required if the service is using an SQL-based Database,
# can be deleted otherwise.

name: Check if DB migration scripts are up to date

on: push

jobs:
  # Please adapt to package
  # Please remove this dummy job and
  # uncomment the sections that follows to enable this workflow.
  dummy_job:
    runs-on: ubuntu-latest
    steps:
      - id: dummy_job
        run: echo "this is a dummy job"

  # check_db_migration_scripts:
  #   runs-on: ubuntu-latest
  #   name: Check if DB migration scripts are up to date
  #   env:
  #     DB_URL: postgresql://postgres:postgres@localhost/postgres
  #   services:
  #     postgres:
  #       image: postgres:latest
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_DB: postgres
  #         POSTGRES_PASSWORD: postgres
  #       ports:
  #         - 5432:5432
  #       # set health checks to wait until postgres has started
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #     - uses: actions/checkout@v1

  #     - name: Get/export important runtime variables
  #       id: runtime_variables
  #       run: |
  #         PACKAGE_NAME="$(./scripts/get_package_name.py)"
  #         MAIN_SRC_DIR="${PWD}/${PACKAGE_NAME}"
  #         CONFIG_YAML_ENV_VAR_NAME="$( echo ${PACKAGE_NAME^^} | sed "s/-/_/g" )_CONFIG_YAML"
  #         CONFIG_YAML="${PWD}/.devcontainer/.dev_config.yaml"

  #         # attach all other variables to the step's output:
  #         echo "::set-output name=PACKAGE_NAME::${PACKAGE_NAME}"
  #         echo "::set-output name=MAIN_SRC_DIR::${MAIN_SRC_DIR}"
  #         echo "::set-output name=CONFIG_YAML_ENV_VAR_NAME::${CONFIG_YAML_ENV_VAR_NAME}"
  #         echo "::set-output name=CONFIG_YAML::${CONFIG_YAML}"

  #     - name: Set up Python 3.9
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9

  #     - name: Install Dependencies
  #       run: |
  #         pip install ".[all]"

  #     - name: try to update db
  #       run: |
  #         export ${{ steps.runtime_variables.outputs.CONFIG_YAML_ENV_VAR_NAME }}="${{ steps.runtime_variables.outputs.CONFIG_YAML }}"
  #         cd ./db_migration
  #         alembic upgrade head

  #     - name: check if DB migration scripts are up to date
  #       run: |
  #         export ${{ steps.runtime_variables.outputs.CONFIG_YAML_ENV_VAR_NAME }}="${{ steps.runtime_variables.outputs.CONFIG_YAML }}"
  #         cd ./db_migration
  #         alembic-autogen-check
